name: CMake

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: install ubuntu dependencies
      run: |
        sudo apt-get install --yes build-essential clang cmake curl git libpoco-dev libeigen3-dev libccd-dev libboost-system-dev portaudio19-dev libglu1-mesa-dev
        APTGETYES=1 make -C rai -j1 installUbuntuAll
        mkdir -p $HOME/git $HOME/.local

    - name: install installer
      run: wget https://github.com/MarcToussaint/rai-extern/raw/main/install.sh; chmod a+x install.sh

    - name: install PhysX
      run: ./install.sh physx

    - name: install FCL
      run: ./install.sh fcl

    - name: install libfranka
      run: ./install.sh libfranka

    - name: install python and pybind
      run: |
        sudo apt install --yes python3 python3-dev python3-pip
        echo 'export PATH="${PATH}:$HOME/.local/bin"' >> ~/.bashrc   #add this to your .bashrc, if not done already
        source ~/.bashrc
        python3 -m pip install --user numpy jupyter nbconvert matplotlib pybind11

    - name: setup build files
      run: |
        export PYTHONVERSION=`python3 -c "import sys; print(str(sys.version_info[0])+'.'+str(sys.version_info[1]))"`
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=$HOME/.local -DUSE_PHYSX=ON -DUSE_REALSENSE=OFF -DUSE_OPENCV=OFF -DUSE_OPENCV_LOCAL=OFF -DPYBIND11_PYTHON_VERSION=$PYTHONVERSION -DUSE_QHULL8=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: install
      run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
